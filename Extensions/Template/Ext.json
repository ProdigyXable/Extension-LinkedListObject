{
    "About": {
        "Name": "Xable Linked List Object",
        "Author": "Samuel Benton",
        "Copyright": "Copyright © 2014 Xable Enterprises",
        "Comment": "This extension allows the easy implementation of non-circular linked lists and linked list structures, such as stacks and queues, within MMFusion.\n\n**Note**\n Nodes currently support only integer data values.",
        "URL": "http://www.xable.us",
        "Help": "http://www.xable.us",
        "Identifier": "PXLL"
    },
    "ActionMenu": 
	[
		["Node Insertion",
		
			[4,"Add Node to Beginning of List"],
			[0,"Add Node to End of List"],
			"Separator",
			[5,"Insert Node at node index"],
		],

		["Node Deletion",
			[1,"Remove Head/First Node"],
			[2,"Remove Tail/Last Node"],
			"Separator",
			[3,"Remove Node via node index"],
			"Separator",
			[6, "Remove Multiple Nodes"],
		],

		["Node Manipulation",
			[7,"Swap Nodes"],
			[8,"Reverse Entire List"],
			[9,"Reverse Subsection of List"],
		],
    ],

    "ConditionMenu": 
	[
		["Node-based",
			[1, "Node just added?"],
			[2, "Node just removed?"],
		],

		["List-based",
			[0, "Is list empty?"],
			[3, "List just cleared?"],
		],
		
		["Errors",
			[4,"Index Bound Error"],
		],
		"Separator",
	],

    "ExpressionMenu": 
	[
		["Node Data",
			[2,"Get Data from Head/First Node"],
			[0,"Get Data from Tail/Last Node"],
			"Separator",
			[3,"Get Data from Node via node index"],
		],

		["List Data",
			[1, "Get List Size"],
		],
			"Separator",
    ],
    "Actions": 
	[
        {"Title": "Add Node to list end with data %0",
            "Parameters": 
			[
				["Integer","Data"]
            ]
        },
		{"Title": "Remove Head/Front Node",
        },
		{"Title": "Remove Tail/End Node",
        },
		{"Title": "Remove Node with index %0",
            "Parameters": 
			[
				["Integer","Node Index"]
            ]
        },
		{"Title": "Add Node to list front with data %0",
            "Parameters": 
			[
				["Integer","Data"]
            ]
        },
		{"Title": "Insert Node to index %0 with data %1",
            "Parameters": 
			[
				["Integer","Node Index"],
				["Integer","Data"]
            ]
        },
		{"Title": "Remove %1 consecutive node(s) starting with node %0",
            "Parameters": 
			[
				["Integer","Initial Node Index"],
				["Integer","Number of Nodes to Delete"]
            ]
        },
		{"Title": "Swap node %0 with node %1",
            "Parameters": 
			[
				["Integer","Node Index A"],
				["Integer","Node Index B"]
            ]
        },
		{"Title": "Reverse List",
        },
		{"Title": "Reverse Subsection of List from index %0 to %1",
            "Parameters": 
			[
				["Integer","Node Index A"],
				["Integer","Node Index B"]
            ]
        },
    ],
    "Conditions": 
	[
		{
			"Title": "%o : Is list empty",
            "Parameters":
			[
            ],
            "Triggered": false
        },
		{
			"Title": "%o : Node just added",
            "Parameters":
			[
            ],
            "Triggered": true
        },
		{
			"Title": "%o : Node just removed",
            "Parameters":
			[
            ],
            "Triggered": true
        },
		{
			"Title": "%o : List just cleared",
            "Parameters":
			[
            ],
            "Triggered": true
		},        
		{
			"Title": "%o : Index boundary error",
            "Parameters":
			[
            ],
            "Triggered": true
        },
    ],
    "Expressions": 
	[
        {
			"Title": "GetEndData(",
			 "Returns": "Integer",
        },
		{
			"Title": "ListSize(",
			 "Returns": "Integer",
        },
		{
			"Title": "GetStartData(",
			 "Returns": "Integer",
        },
		{
			"Title": "GetData(",
			"Returns": "Integer",
			"Parameters": 
			[
				["Integer","Node Index"],
            ]
			 
        },
    ]
}